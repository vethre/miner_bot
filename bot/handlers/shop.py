from aiogram import Router, types, F
from bot.db import get_user, add_item, db

# –ü—Ä–æ—Å—Ç–∏–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤
SHOP_ITEMS = {
    "ü™ì –î–µ—Ä–µ–≤‚Äô—è–Ω–∞ –∫–∏—Ä–∫–∞": {"price": 50, "bonus": 1},
    "‚õèÔ∏è –ö–∞–º‚Äô—è–Ω–∞ –∫–∏—Ä–∫–∞":    {"price": 200, "bonus": 5},
    "üíé –ó–æ–ª–æ—Ç–∞ –∫–∏—Ä–∫–∞":     {"price": 1000, "bonus": 20},
}

router = Router()

@router.message(F.text == "/shop")
async def shop_cmd(message: types.Message):
    text = ["üõí <b>–ú–∞–≥–∞–∑–∏–Ω –∫–∏—Ä–æ–∫</b>"]
    for name, props in SHOP_ITEMS.items():
        text.append(f"{name} ‚Äî {props['price']} –º–æ–Ω–µ—Ç (+{props['bonus']} –¥—Ä–æ–ø—É)")
    await message.reply("\n".join(text), parse_mode="HTML")

@router.message(F.text.startswith("/buy"))
async def buy_cmd(message: types.Message):
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2:
        await message.reply("–í–∫–∞–∂–∏, —â–æ –∫—É–ø–∏—Ç–∏: /buy <–Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É>")
        return

    choice = parts[1].strip()
    user = await get_user(message.from_user.id)
    if not user:
        return await message.reply("–°–ø–µ—Ä—à—É /start")

    item = SHOP_ITEMS.get(choice)
    if not item:
        return await message.reply("–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –º–∞–≥–∞–∑–∏–Ω—ñ üòï")

    if user["balance"] < item["price"]:
        return await message.reply("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç üí∏")

    # –í—ñ–¥–Ω—ñ–º–∞—î–º–æ –≥—Ä–æ—à—ñ —Ç–∞ –¥–∞—î–º–æ —Ç–æ–≤–∞—Ä
    await db.execute(
        "UPDATE users SET balance = balance - :price WHERE user_id = :user_id",
        {"price": item["price"], "user_id": message.from_user.id}
    )
    await add_item(message.from_user.id, choice, 1)

    await message.reply(f"–¢–∏ –ø—Ä–∏–¥–±–∞–≤ {choice}! üéâ")
