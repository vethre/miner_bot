# bot/handlers/shop.py
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bot.db import get_user, add_item, db

router = Router()

# –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –º–∞–≥–∞–∑–∏–Ω—ñ –∑ –∫–ª—é—á–∞–º–∏ –±–µ–∑ –µ–º–æ–¥–∑—ñ –¥–ª—è –ë–î
SHOP_ITEMS = {
    "wood_handle":    {"price": 100,  "name": "–†—É–∫–æ—è—Ç—å", "emoji": "ü™µ "},
    "wooden_pickaxe": {"price": 200,  "name": "–î–µ—Ä–µ–≤‚Äô—è–Ω–∞ –∫–∏—Ä–∫–∞", "emoji": "üî® "},
    "iron_pickaxe":   {"price": 1000, "name": "–ó–∞–ª—ñ–∑–Ω–∞ –∫–∏—Ä–∫–∞", "emoji": "‚õèÔ∏è "},
    "gold_pickaxe":   {"price": 2000, "name": "–ó–æ–ª–æ—Ç–∞ –∫–∏—Ä–∫–∞", "emoji": "‚ú® "},
    # —ó–∂–∞
    "bread": {"price": 50,  "name": "–•–ª—ñ–±", "hunger": 30, "emoji": "üçû "},
    "meat":  {"price": 120, "name": "–ú‚Äô—è—Å–æ","hunger": 60, "emoji": "üçñ "},
}

@router.message(Command("/shop"))
async def shop_cmd(message: types.Message, user_id: int | None = None):
    uid = user_id or message.from_user.id
    user = await get_user(uid)
    if not user:
        return await message.reply("–°–ø–µ—Ä—à—É –≤–≤–µ–¥–∏ /start")

    # –°—Ç–≤–æ—Ä—é—î–º–æ builder –¥–ª—è —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    builder = InlineKeyboardBuilder()
    for item_id, item in SHOP_ITEMS.items():
        text = f"{item['emoji']} {item['name']} ‚Äî {item['price']} –º–æ–Ω–µ—Ç"
        builder.button(text=text, callback_data=f"buy:{item_id}")
    builder.adjust(1)

    await message.reply(
        "üõí <b>–ú–∞–≥–∞–∑–∏–Ω –∫–∏—Ä–æ–∫</b> ‚Äî –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É, —â–æ–± –∫—É–ø–∏—Ç–∏:",
        parse_mode="HTML",
        reply_markup=builder.as_markup()
    )

@router.callback_query(F.data.startswith("buy:"))
async def shop_buy_callback(callback: CallbackQuery):
    await callback.answer()  # acknowledge to remove loading state
    user_id = callback.from_user.id
    user = await get_user(user_id)
    if not user:
        return await callback.message.reply("–°–ø–µ—Ä—à—É /start")

    item_id = callback.data.split(':', 1)[1]
    item = SHOP_ITEMS.get(item_id)
    if not item:
        return await callback.message.reply("–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ üòï")

    if user['balance'] < item['price']:
        return await callback.message.reply("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç üí∏")

    # –í—ñ–¥–Ω—ñ–º–∞—î–º–æ –º–æ–Ω–µ—Ç–∏ —Ç–∞ –¥–æ–¥–∞—î–º–æ —Ç–æ–≤–∞—Ä –≤ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä (–∑–∞ id)
    await db.execute(
        "UPDATE users SET balance = balance - :price WHERE user_id = :user_id",
        {"price": item['price'], "user_id": user_id}
    )
    await add_item(user_id, item_id, 1)

    await callback.message.reply(f"–¢–∏ –ø—Ä–∏–¥–±–∞–≤ {item['emoji']} <b>{item['name']}</b>! üéâ", parse_mode="HTML")
