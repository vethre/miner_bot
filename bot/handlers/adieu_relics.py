# adieu_relics.py
from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import datetime
import random, textwrap

from bot.db_local import add_item, get_inventory, add_money, get_money
from bot.handlers.items import ITEM_DEFS
from bot.handlers.use import PICKAXES
from bot.handlers.use import open_adieu_pack  # –µ—Å–ª–∏ —É —Ç–µ–±—è –¥—Ä—É–≥–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –ø–æ–ø—Ä–∞–≤—å –∏–º–ø–æ—Ä—Ç

router = Router()

ADIEU_ACTIVE = True  # –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥ —Ñ–∏–Ω–∞–ª–∞ (–º–æ–∂–µ—à—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ config)

ANGEL_EPILOGUE = (
    "ü™Ω <b>Adieu</b>\n"
    "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—É—Ç—å. –ü—Ä–æ–µ–∫—Ç —É—Ö–æ–¥–∏—Ç –Ω–∞ –ø–∞—É–∑—É. "
    "–ó–∞–±–µ—Ä–∏—Ç–µ —Å—É–≤–µ–Ω–∏—Ä—ã: /adieu –∏ /soul, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∑–æ—Ä–≤–∞—Ç—å /core.\n"
    "–î–∞ —Ö—Ä–∞–Ω–∏—Ç –≤–∞—Å —à–∞—Ö—Ç–∞. bid adieu."
)

# 1) /soul ‚Äî –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç ¬´–î—É—à—É¬ª –≤ –ö–∏—Ä–∫—É –ö–∞—Ç–∞—Ä—Å–∏—Å–∞
@router.message(Command("soul"))
async def soul_cmd(m: types.Message):
    cid, uid = m.chat.id, m.from_user.id
    inv = {r["item"]: r["qty"] for r in await get_inventory(cid, uid)}
    if inv.get("adieu_soul", 0) <= 0:
        return await m.answer("ü™Ω –£ —Ç–µ–±—è –Ω–µ—Ç ¬´–î—É—à–∏¬ª. –ü–æ–ª—É—á–∏ –µ—ë –∏–∑ Adieu‚ÄëPack.")
    await add_item(cid, uid, "adieu_soul", -1)
    # –≤—ã–¥–∞—ë–º –∫–∏—Ä–∫—É (–∫–∞–∫ –ø—Ä–µ–¥–º–µ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ ‚Äî –∫–∞–∫ —É —Ç–µ–±—è –æ–±—ã—á–Ω–æ –≤—ã–¥–∞–µ—Ç—Å—è –∫–∏—Ä–∫–∞)
    await add_item(cid, uid, "pick_catharsis", 1)
    await m.answer("‚öîÔ∏è –¢—ã –æ–±—Ä—ë–ª <b>–ö–∏—Ä–∫—É –ö–∞—Ç–∞—Ä—Å–∏—Å–∞</b>. "
                   "–ü—Ä–æ—á–Ω–æ—Å—Ç—å ‚àû, +100‚ÄØ000% –∫ –¥–æ–±—ã—á–µ, –∫–∞–∂–¥–∞—è –∫–æ–ø–∫–∞ –¥–∞—ë—Ç +10‚ÄØ000 –º–æ–Ω–µ—Ç.")

# 2) /core ‚Äî –≤–∑—Ä—ã–≤ —è–¥—Ä–∞: +100 –∫–µ–π—Å–æ–≤, ‚àí300k –º–æ–Ω–µ—Ç (–Ω–µ —É—Ö–æ–¥–∏–º –≤ –º–∏–Ω—É—Å)
@router.message(Command("core"))
async def core_cmd(m: types.Message):
    cid, uid = m.chat.id, m.from_user.id
    inv = {r["item"]: r["qty"] for r in await get_inventory(cid, uid)}
    if inv.get("cave_core", 0) <= 0:
        return await m.answer("üß® –ù–µ—Ç ¬´–Ø–¥—Ä–∞ Cave¬ª. –°–∫—Ä–∞—Ñ—Ç–∏ –∏–∑ –†—É–¥—ã –ó–∞–∫–∞—Ç–∞ –∏ —Ñ–∞–∫–µ–ª–∞.")
    await add_item(cid, uid, "cave_core", -1)
    # –≤—ã–¥–∞—á–∞ 100 –∫–µ–π—Å–æ–≤ (–µ—Å–ª–∏ —É —Ç–µ–±—è –æ–¥–Ω–∞ —Å—É—â–Ω–æ—Å—Ç—å –∫–µ–π—Å–∞ ‚Äî –ø–æ–º–µ–Ω—è–π –∫–ª—é—á)
    await add_item(cid, uid, "adieu_pack", 100)
    bal = await get_money(cid, uid)
    fine = min(300_000, bal)  # –Ω–µ —É—Ö–æ–¥–∏–º –≤ –º–∏–Ω—É—Å
    await add_money(cid, uid, -fine)
    await m.answer(f"üí• <b>–Ø–¥—Ä–æ –≤—Å–ø—ã—Ö–Ω—É–ª–æ!</b>\n+100 üéÅ Adieu‚ÄëPack, ‚àí{fine:,} –º–æ–Ω–µ—Ç.".replace(",", " "))

# 3) /requiem ‚Äî ¬´–£–ø–æ–∫–æ–π¬ª: –ø–ª–∞—á—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ HEX –∏–ª–∏ ¬´—É—Ç—ë–∫—à–∏–π –∫–æ–¥¬ª
@router.message(Command("requiem"))
async def requiem_cmd(m: types.Message):
    cid, uid = m.chat.id, m.from_user.id
    inv = {r["item"]: r["qty"] for r in await get_inventory(cid, uid)}
    if inv.get("requiem_scroll", 0) <= 0:
        return await m.answer("üïØÔ∏è –ù–µ—Ç —Å–≤–∏—Ç–∫–∞ ¬´–£–ø–æ–∫–æ–π¬ª. –ü–æ–ø—Ä–æ–±—É–π –≤—ã–±–∏—Ç—å –≤ –∫–æ–ø–∫–µ.")
    await add_item(cid, uid, "requiem_scroll", -1)

    if random.random() < 0.5:
        # HEX‚Äë–ø–ª–∞—á
        msg = "adieu... —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏. –º—ã –µ—â—ë –≤–µ—Ä–Ω—ë–º—Å—è."
        hexed = msg.encode("utf-8").hex()
        return await m.answer(f"0x{hexed}")
    else:
        # ¬´—É—Ç—ë–∫—à–∏–π –∫–æ–¥¬ª (—ç—Å—Ç–µ—Ç–∏–∫–∞ VS Code)
        snippet = textwrap.dedent("""\
        // cave_core.cpp
        std::string epilogue() {
            return "–®–∞—Ö—Ç–∞ —Å–ø–∏—Ç. –ú—ã –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è —Å–Ω–æ–≤–∞. bid adieu.";
        }
        """)
        return await m.answer(f"<code>{snippet}</code>", parse_mode="HTML")

# 4) –ü–µ—Ä–µ—Ö–≤–∞—Ç –ª–∏—à–Ω–∏—Ö –∫–æ–º–∞–Ω–¥ –ø—Ä–∏ ADIEU_ACTIVE
ADIEU_BLOCKED = {"disassemble", "clashrank", "trackpass", "badgeshop"}

@router.message(F.text.regexp(r"^/(\w+)$"))
async def adieu_intercept(m: types.Message):
    if not ADIEU_ACTIVE:
        return
    cmd = m.text.lstrip("/").split()[0].lower()
    if cmd in ADIEU_BLOCKED:
        await m.answer(ANGEL_EPILOGUE, parse_mode="HTML")

@router.message(Command("forge_core"))
async def forge_core_cmd(m: types.Message):
    cid, uid = m.chat.id, m.from_user.id
    inv = {r["item"]: r["qty"] for r in await get_inventory(cid, uid)}
    need_ore = 10  # —Å–∫–æ–ª—å–∫–æ sunset_ore –Ω—É–∂–Ω–æ
    need_torch = 1 # –æ–±—ã—á–Ω—ã–π —Ñ–∞–∫–µ–ª, –ø–æ–ø—Ä–∞–≤—å –∫–ª—é—á –µ—Å–ª–∏ –¥—Ä—É–≥–æ–π
    if inv.get("sunset_ore", 0) < need_ore or inv.get("lapis_torch", 0) < need_torch:
        return await m.answer(f"–ù—É–∂–Ω–æ: üåá {need_ore}√ó –†—É–¥—ã –ó–∞–∫–∞—Ç–∞ –∏ üî• {need_torch}√ó –õ–∞–∑—É—Ä–Ω–æ–≥–æ —Ñ–∞–∫–µ–ª–∞.")
    await add_item(cid, uid, "sunset_ore", -need_ore)
    await add_item(cid, uid, "lapis_torch", -need_torch)
    await add_item(cid, uid, "cave_core", 1)
    await m.answer("üß® –°–∫—Ä–∞—Ñ—á–µ–Ω–æ: ¬´–Ø–¥—Ä–æ Cave¬ª. –í–∑–æ—Ä–≤–∏ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π /core")

