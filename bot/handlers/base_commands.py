from aiogram import Router, types, F
from bot.db import create_user, get_user, db, add_item, get_inventory
import time
import random

router = Router()

# –û–ø–∏—Å–∏ —Ä—É–¥ –∑ –∫–ª—é—á–∞–º–∏ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤ –ë–î
ORE_ITEMS = {
    "stone": {
        "name": "–ö–∞–º—ñ–Ω—å",
        "emoji": "ü™®",
        "drop_range": (1, 5),
        "price": 2,
    },
    "coal": {
        "name": "–í—É–≥—ñ–ª–ª—è",
        "emoji": "üß±",
        "drop_range": (1, 4),
        "price": 5,
    },
    "iron": {
        "name": "–ó–∞–ª—ñ–∑–Ω–∞ —Ä—É–¥–∞",
        "emoji": "‚õèÔ∏è",
        "drop_range": (1, 3),
        "price": 10,
    },
    "gold": {
        "name": "–ó–æ–ª–æ—Ç–æ",
        "emoji": "ü™ô",
        "drop_range": (1, 2),
        "price": 20,
    },
}

@router.message(F.text == "/start")
async def start_cmd(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.full_name
    await create_user(user_id, username)
    await message.reply(
        "–ü—Ä–∏–≤—ñ—Ç, —à–∞—Ö—Ç–∞—Ä—é! ‚õèÔ∏è –¢–∏ —â–æ–π–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–≤—Å—è –≤ —Å–∏—Å—Ç–µ–º—ñ. –ù–∞–ø–∏—à–∏ /mine, —â–æ–± –∫–æ–ø–∞—Ç–∏ —Ä–µ—Å—É—Ä—Å–∏!"
    )

@router.message(F.text == "/mine")
async def mine_cmd(message: types.Message):
    user_id = message.from_user.id
    user = await get_user(user_id)
    if not user:
        return await message.reply("–°–ø–µ—Ä—à—É –≤–≤–µ–¥–∏ /start")

    now = int(time.time())
    cooldown = 30
    if now - user["last_mine"] < cooldown:
        return await message.reply(
            f"üïí –¢–∏ –≤–∂–µ –∫–æ–ø–∞–≤! –°–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ {cooldown - (now - user['last_mine'])} —Å–µ–∫."
        )

    # –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ç–∏–ø —Ä—É–¥–∏
    ore_id = random.choice(list(ORE_ITEMS.keys()))
    low, high = ORE_ITEMS[ore_id]["drop_range"]
    amount = random.randint(low, high)

    # –î–æ–¥–∞—î–º–æ –¥–æ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä—è —Ç–∞ –æ–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∫–æ–ø–∞–Ω–Ω—è
    await add_item(user_id, ore_id, amount)
    await db.execute(
        "UPDATE users SET last_mine = :now WHERE user_id = :user_id",
        {"now": now, "user_id": user_id}
    )

    emoji = ORE_ITEMS[ore_id]["emoji"]
    name = ORE_ITEMS[ore_id]["name"]
    await message.reply(
        f"–¢–∏ –∑–¥–æ–±—É–≤ <b>{amount}√ó{emoji} {name}</b>! –ü–µ—Ä–µ–≤—ñ—Ä /inventory üòé",
        parse_mode="HTML"
    )

@router.message(F.text == "/inventory")
async def inventory_cmd(message: types.Message):
    user_id = message.from_user.id
    user = await get_user(user_id)
    if not user:
        return await message.reply("–°–ø–µ—Ä—à—É –≤–≤–µ–¥–∏ /start")

    inv = await get_inventory(user_id)
    lines = [f"üßæ –ë–∞–ª–∞–Ω—Å: {user['balance']} –º–æ–Ω–µ—Ç", "<b>üì¶ –Ü–Ω–≤–µ–Ω—Ç–∞—Ä:</b>"]
    for row in inv:
        ore = ORE_ITEMS.get(row['item'])
        if ore:
            lines.append(f"{ore['emoji']} {ore['name']}: {row['quantity']}")
    await message.reply("\n".join(lines), parse_mode="HTML")

@router.message(F.text.startswith("/sell"))
async def sell_cmd(message: types.Message):
    user_id = message.from_user.id
    parts = message.text.split(maxsplit=2)
    if len(parts) < 3:
        return await message.reply(
            "–Ø–∫ –ø—Ä–æ–¥–∞—Ç–∏: /sell <–Ω–∞–∑–≤–∞> <–∫—ñ–ª—å–∫—ñ—Å—Ç—å>, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ /sell –ó–æ–ª–æ—Ç–æ 3"
        )

    name_input = parts[1].strip()
    try:
        qty = int(parts[2].strip())
    except ValueError:
        return await message.reply("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º!")

    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ ore_id –∑–∞ –Ω–∞–∑–≤–æ—é (–±–µ–∑ emoji)
    ore_id = next(
        (key for key, val in ORE_ITEMS.items() if val['name'].lower() == name_input.lower()),
        None
    )
    if not ore_id:
        return await message.reply("–¢–∏ –Ω–µ –º–æ–∂–µ—à —Ç–æ—Ä–≥—É–≤–∞—Ç–∏ —Ü–∏–º —Ä–µ—Å—É—Ä—Å–æ–º üòï")

    inv = await get_inventory(user_id)
    inv_dict = {row['item']: row['quantity'] for row in inv}
    have = inv_dict.get(ore_id, 0)
    if have < qty:
        return await message.reply(f"–£ —Ç–µ–±–µ –ª–∏—à–µ {have} —à—Ç. {ORE_ITEMS[ore_id]['name']}")

    price = ORE_ITEMS[ore_id]['price']
    earned = price * qty

    # –û–Ω–æ–≤–ª—é—î–º–æ –ë–î: –≤—ñ–¥–Ω—ñ–º–∞—î–º–æ —Ä—É–¥—É —Ç–∞ –¥–æ–¥–∞—î–º–æ –º–æ–Ω–µ—Ç–∏
    await db.execute(
        "UPDATE inventory SET quantity = quantity - :qty WHERE user_id = :user_id AND item = :ore_id",
        {"qty": qty, "user_id": user_id, "ore_id": ore_id}
    )
    await db.execute(
        "UPDATE users SET balance = balance + :earned WHERE user_id = :user_id",
        {"earned": earned, "user_id": user_id}
    )

    emoji = ORE_ITEMS[ore_id]['emoji']
    name = ORE_ITEMS[ore_id]['name']
    await message.reply(
        f"–ü—Ä–æ–¥–∞–Ω–æ {qty}√ó{emoji} {name} –∑–∞ {earned} –º–æ–Ω–µ—Ç üí∞", parse_mode="HTML"
    )
