# bot/handlers/cavepass.py

import datetime as dt
import logging
from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.db_local import cid_uid, get_progress, add_money, add_item, db, get_money
from bot.handlers.items import ITEM_DEFS
from bot.assets import PASS_IMG_ID

router = Router()

PASS_PRICE_COINS = 1000           # —è–∫—â–æ –≤—Å–µ –∂ —Ö–æ—á–µ—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ –∑–∞ –≤–Ω—É—Ç—Ä—ñ—à–Ω—é –≤–∞–ª—é—Ç—É
PASS_PRICE_UAH = 53               # —Ä–µ–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ –≤ –≥—Ä–∏–≤–Ω—è—Ö
PAYMENT_LINK = "https://send.monobank.ua/jar/A8ew2aMM3S"  # –∑–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à

PASS_DURATION_DAYS = 19
EX_KEY = "crystal_pickaxe"
EX_NAME = "–•—Ä—É—Å—Ç–∞–ª—å–Ω–∞—è –∫–∏—Ä–∫–∞"
EX_EMOJI = "üíé"
ITEM_DEFS[EX_KEY] = {"name": EX_NAME, "emoji": EX_EMOJI}

@router.message(Command("cavepass"))
async def cavepass_cmd(message: types.Message):
    cid, uid = await cid_uid(message)
    prog = await get_progress(cid, uid)
    now = dt.datetime.utcnow()
    expires = prog.get("pass_expires")
    has = prog.get("cave_pass", False)

    builder = InlineKeyboardBuilder()
    if not has or (expires and expires < now):
        # –∫–Ω–æ–ø–∫–∞ –Ω–∞ –∑–æ–≤–Ω—ñ—à–Ω—é –æ–ø–ª–∞—Ç—É
        builder.button(
            text=f"üí≥ –ö—É–ø–∏—Ç—å –∑–∞ ‚Ç¥{PASS_PRICE_UAH}",
            url=PAYMENT_LINK
        )
        builder.adjust(1)
        text = (
            "<b><i>[Pre-Season]</i> Cave Pass</b> ‚Äî 15 –¥–Ω–µ–π –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤:\n"
            f" ‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è {EX_EMOJI} <b>{EX_NAME}</b>\n"
            " ‚Ä¢ √ó1.5 XP –ø—Ä–∏ –¥–æ–±—ã–≤–∞–Ω–∏–∏\n"
            " ‚Ä¢ +10 –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ XP –∫–∞–∂–¥—ã–π —á–∞—Å!\n"
            f" ‚Ä¢ <i><b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b> {EX_EMOJI} {EX_NAME} —á–∏–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑ –∏ —Ç–æ–ª—å–∫–æ –Ω–∞–ø–æ–ª–æ–≤–∏–Ω—É.</i>\n\n"
            f"<i>–¶–µ–Ω–∞: {PASS_PRICE_UAH} ‚Ç¥ (–æ–ø–ª–∞—Ç–∞ —Å–Ω–∞—Ä—É–∂–∏)</i>\n"
            "<i>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–æ–æ–±—â–∏—Ç–µ –º–Ω–µ —á–µ—Ä–µ–∑ /report '—Å–æ–æ–±—â–µ–Ω–∏–µ'</i>"
        )
    else:
        days = max(0, (expires.date() - now.date()).days)
        text = (
            "<b>–í–∞—à Cave Pass –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>\n"
            f"–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –∫–∏—Ä–∫–∞: {EX_EMOJI} <b>{EX_NAME}</b>\n"
            f"–¢–µ—Ä–º–∏–Ω –¥–µ–π—Å—Ç–≤–∏—è –æ—Å—Ç–∞–ª—Å—è: <b>{days} –¥–Ω.</b>"
        )
    await message.answer_photo(
        PASS_IMG_ID,
        caption=text,
        parse_mode="HTML",
        reply_markup=builder.as_markup()
    )

# —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤
ADMINS = {700929765, 988127866}

@router.message(Command("activate_pass"))
async def activate_pass_cmd(message: types.Message):
    if message.from_user.id not in ADMINS:
        return await message.reply("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

    parts = message.text.split()
    if len(parts) != 3:
        return await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n/activate_pass 'user_id | @username' 'chat_id'")

    target = parts[1]
    try:
        chat_id = int(parts[2])
    except ValueError:
        return await message.reply("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç chat_id (–æ–∂–∏–¥–∞–ª–æ—Å—å —á–∏—Å–ª–æ).")

    # üîç –ü–æ–ª—É—á–∞–µ–º user_id
    if target.startswith("@"):
        try:
            member = await message.bot.get_chat_member(chat_id, target)
            user_id = member.user.id
        except Exception as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —é–∑–µ—Ä–∞: {e}")
            return await message.reply("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ.")
    else:
        if not target.isdigit():
            return await message.reply("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç user_id.")
        user_id = int(target)

    # üóìÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—ã –∏ –∫–∏—Ä–∫—É
    now = dt.datetime.utcnow()
    expires = dt.datetime(2025, 7, 10, 21, 59, 59)

    # ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ progress_local
    await db.execute(
        """
        UPDATE progress_local
           SET cave_pass = TRUE,
               pass_expires = :exp,
               current_pickaxe = :pick,
               pick_dur = 94,
               pick_dur_max = 95
         WHERE chat_id = :c AND user_id = :u
        """,
        {"exp": expires, "pick": EX_KEY, "c": chat_id, "u": user_id}
    )

    # üß± –î–æ–±–∞–≤–ª—è–µ–º –∫–∏—Ä–∫—É –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å (–µ—Å–ª–∏ –µ—â—ë –Ω–µ—Ç)
    await db.execute(
        """
        INSERT INTO inventory_local(chat_id, user_id, item, qty)
             VALUES(:c, :u, :i, 1)
           ON CONFLICT DO NOTHING
        """,
        {"c": chat_id, "u": user_id, "i": EX_KEY}
    )

    await message.reply(
        f"‚úÖ Cave Pass –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è <code>{user_id}</code> –≤ —á–∞—Ç–µ <code>{chat_id}</code>\n"
        f"–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ <b>{expires.strftime('%d.%m.%Y')}</b> ‚õèÔ∏è",
        parse_mode="HTML"
    )

