import json
from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bot.db_local import get_progress
from bot.utils.autodelete import register_msg_for_autodelete

ACHIEVEMENTS = {
    "repair_master": {
        "name": "–ö–∏—Ä-–º–µ–π—Å—Ç–µ—Ä",
        "emoji": "üõ†Ô∏è",
        "desc": "–ü–æ—á–∏–Ω–∏—Ç—å –∫–∏—Ä–∫—É 10 —Ä–∞–∑"
    },
    "bear_miner": {
        "name": "–®–∞—Ö—Ç–µ—Ä—Å–∫–∏–π –º–µ–¥–≤–µ–¥—å",
        "emoji": "üêª",
        "desc": "–°–¥–µ–ª–∞—Ç—å 20 –∫–æ–ø–∞–Ω–∏–π"
    },
    "streak_master": {
        "name": "–°—Ç—Ä–∏–∫-–º–µ–π—Å—Ç–µ—Ä",
        "emoji": "üî•",
        "desc": "–ò–º–µ—Ç—å —Å–µ—Ä–∏—é ‚â• 10 –¥–Ω–µ–π"
    },
    "cave_bot": {
        "name": "Cave Bot",
        "emoji": "‚õèÔ∏è",
        "desc": "–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /cavebot"
    },
    "pre_pass": {
        "name": "–ü–∞—Å—Å-—Ç–µ—Å—Ç–µ—Ä",
        "emoji": "üíé",
        "desc": "–ö—É–ø–∏/–ø–æ–ª—É—á–∏ Cave Pass Pre-Season"
    },
    "cobble_player": {
        "name": "–§–∞–Ω–∞—Ç –∫–æ–±–ª—Å—Ç–æ—É–Ω–∞",
        "emoji": "ü™®",
        "desc": "–°–∫—Ä–∞—Ñ—Ç–∏ –±—É–ª—ã–∂–Ω–∏–∫–æ–≤—É—é –∫–∏—Ä–∫—É"
    },
}

async def achievements_menu(message: types.Message, uid: int):
    cid = message.chat.id
    prog = await get_progress(cid, uid)
    got = prog.get("achievements_unlocked") or {}
    if isinstance(got, str):
        try:
            got = json.loads(got)
        except Exception:
            got = {}

    user = await message.bot.get_chat(uid)
    mention = user.full_name
    lines = [f"üèÜ <b>–ê—á–∏–≤–∫–∏ —à–∞—Ö—Ç—ë—Ä–∞ {mention}:</b>\n"]
    for code, a in ACHIEVEMENTS.items():
        emoji = "‚úÖ" if got.get(code) else "üîì"
        lines.append(f"{emoji} {a['emoji']} <b>{a['name']}</b> ‚Äî {a['desc']}")

    #kb = InlineKeyboardBuilder()
    # kb.button(text="‚óÄ –ù–∞–∑–∞–¥", callback_data=f"dcavepass")

    msg = await message.answer("\n".join(lines), parse_mode="HTML") #reply_markup=kb.as_markup())
    register_msg_for_autodelete(message.chat.id, msg.message_id)