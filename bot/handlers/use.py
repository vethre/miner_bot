from aiogram import Router, types
from aiogram.filters import Command
import datetime as dt

from bot.db_local import cid_uid, get_inventory, db

# –û–ø–∏—Å –∫–∏—Ä–æ–∫ —Ç–∞ —ó—Ö –±–æ–Ω—É—Å—ñ–≤
PICKAXES = {
    "wooden_pickaxe":    {"bonus": 0.1,  "name": "–¥–µ—Ä–µ–≤‚Äô—è–Ω–∞ –∫–∏—Ä–∫–∞",   "emoji": "üî®"},
    "iron_pickaxe":      {"bonus": 0.15, "name": "–∑–∞–ª—ñ–∑–Ω–∞ –∫–∏—Ä–∫–∞",      "emoji": "‚õèÔ∏è"},
    "gold_pickaxe":      {"bonus": 0.3,  "name": "–∑–æ–ª–æ—Ç–∞ –∫–∏—Ä–∫–∞",      "emoji": "‚ú®"},
    "roundstone_pickaxe":{"bonus": 0.05, "name": "–∫—Ä—É–≥–ª—è–∫–æ–≤–∞ –∫–∏—Ä–∫–∞",  "emoji": "üî®"},
    "crystal_pickaxe":    {"bonus": 2.5,  "name": "–∫—Ä–∏—Å—Ç–∞–ª—å–Ω–∞ –∫–∏—Ä–∫–∞",   "emoji": "üíé"},
    "amethyst_pickaxe":    {"bonus": 0.7,  "name": "–∞–º–µ—Ç–∏—Å—Ç–æ–≤–∞ –∫–∏—Ä–∫–∞",   "emoji": "‚ú®"},
}

router = Router()

PICKAXE_ALIASES = {
    "–¥–µ—Ä–µ–≤'—è–Ω–∞ –∫–∏—Ä–∫–∞":    "wooden_pickaxe",
    "–¥–µ—Ä–µ–≤‚Äô—è–Ω–∞ –∫–∏—Ä–∫–∞":    "wooden_pickaxe",
    "–∑–∞–ª—ñ–∑–Ω–∞ –∫–∏—Ä–∫–∞":      "iron_pickaxe",
    "–∑–æ–ª–æ—Ç–∞ –∫–∏—Ä–∫–∞":       "gold_pickaxe",
    "–∫—Ä—É–≥–ª—è–∫–æ–≤–∞ –∫–∏—Ä–∫–∞":   "roundstone_pickaxe",
    "–∞–º–µ—Ç–∏—Å—Ç–æ–≤–∞ –∫–∏—Ä–∫–∞":    "amethyst_pickaxe",
}

@router.message(Command("use"))
async def use_cmd(message: types.Message):
    cid, uid = await cid_uid(message)
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2:
        return await message.reply("–Ø–∫ –æ–±—Ä–∞—Ç–∏ –∫–∏—Ä–∫—É: /use <–Ω–∞–∑–≤–∞ –∞–±–æ –∫–ª—é—á –∫–∏—Ä–∫–∏>")

    user_input = parts[1].strip().lower()
    user_input = user_input.replace("'", "‚Äô")  # –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞

    key = PICKAXE_ALIASES.get(user_input) or (
        user_input if user_input in PICKAXES else None
    )
    if not key:
        return await message.reply(f"–ù–µ–º–∞—î —Ç–∞–∫–æ—ó –∫–∏—Ä–∫–∏ ¬´{parts[1]}¬ª üòï")

    inv = await get_inventory(cid, uid)
    have = next((r["qty"] for r in inv if r["item"] == key), 0)
    if have < 1:
        return await message.reply(f"–£ —Ç–µ–±–µ –Ω–µ–º–∞—î {PICKAXES[key]['name']} üôÅ")

    # –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–∏—Ä–∫—É –π –º—ñ—Ü–Ω—ñ—Å—Ç—å
    await db.execute(
        """
        UPDATE progress_local
           SET current_pickaxe = :p, pick_dur = pick_dur_max
         WHERE chat_id = :c AND user_id = :u
        """,
        {"p": key, "c": cid, "u": uid}
    )

    bonus_pct = int(PICKAXES[key]['bonus'] * 100)
    await message.reply(
        f"{PICKAXES[key]['emoji']} –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à <b>{PICKAXES[key]['name']}</b>\n"
        f"–ë–æ–Ω—É—Å –¥–æ –¥—Ä–æ–ø—É: +{bonus_pct}%",
        parse_mode="HTML"
    )